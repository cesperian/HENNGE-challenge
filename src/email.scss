
//todo; refactor multiple greys into 2 vars

#appContainer{

  padding: 34px 21px;
  //border-top: thin solid #e9e2e2;
  //margin-top: 30px;

  #searchContainer{
    width: 300px;
    height: 43px;
    border: 2px solid #d0d0d0;
    border-radius: 6px;
    box-shadow: 0 0 4px 1px rgba(208, 208, 208, 0.4) inset;
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    //&:before{
    //  content: attr(data-date-range);
    //  position: absolute;
    //  left: 43px;
    //  font-size: 1.1em;
    //}
    // datepickers. Easiest way to add content is by where they are inserted by Materialize...
    div.modal:before{padding: 8px 22px;display: block;}
    //.displayDate{display: none;}
    .displayDate + div.modal:before{content:'Pick search start date';}
    input + div.modal:before{content:'Pick search end date';}
    //> input{
    //  display: none;
      //font-size: 1.3em;
      //border: 0;
      //margin: 0;
      //color: transparent;
      //&#date02{display: none;}
    //}
    .icon-calendar{
      height: 23px;
      svg{padding: 3px 10px;}
    }
    .icon-search{
      position: absolute;
      border-left: 2px solid #d0d0d0;
      right: 0;
      top: 0;
      background-color: #f5f5f5;
      height: 100%;
      width: 18%;
      padding: 9px 0;
      text-align: center;
      transition: all 350ms;
      &:hover{
        background-color: #eaeaea;
      }
      svg{padding: 0 10px;}
    }
    svg{
      fill: #555;
      height: 100%;
      cursor: pointer;
    }
  } //searchContainer

  @mixin gridRowCommon{
    height: 57px;
    display: flex;
    align-items: center;
    padding-left: 10px;
    span{
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
      padding-right: 1%;
      position: relative;
      &.from{width: 20%;}
      &.to{
        width: 25%;
        &[data-count]:not([data-count='1']){
          padding-right: 5%;
          &:after{content: "+" attr(data-count);
            background: #888;
            padding: 0 6px;
            display: block;
            position: absolute;
            top: 50%;
            right: 5%;
            transform: translateY(-50%);
            border-radius: 4px;
            color: #fff;
            font-size: 0.85em;
            font-weight: bold;
          }
        }
      }
      &.subject{
        width: 55%;
        &[data-attachments='true']{padding-right: 4%;}
        .icon-paperclip{
          position: absolute;
          top: 50%;
          right: 3%;
          transform: translateY(-50%);
        }
      }
      &.date{width: 10%;}
    }
  }

  #resultsContainer{
    margin-top: 15px;
    div#resultCounter{
      border-bottom: 1px solid #e8e6e6;
      font-weight: bold;
      font-size: 1.3em;
      color: #666;
      span{font-size: 1.3em;}
    }
    #gridHeader{
      background: #f5f5f5;
      //border-top: 2px solid #e8e6e6;
      border-bottom: 1px solid #e8e6e6;
      span{
        color: #000;
        font-weight: bold;
        &[data-sort-asc='false'] svg{transform: rotate(180deg);}
        &[data-sort-on='false']{
          color: #8f8f8f;
          svg{display: none;}
        }
        a{
          color: inherit;
          &:hover{text-decoration: underline;cursor:pointer;}
        }
        svg{
          height: 7px;
          display: inline-block;
          margin-left: 3px;
        }
      }
      //span{height: fit-content;}
      @include gridRowCommon;
    }
    #gridBody{
      &.empty{
        height: 50vh;
        background: url('logo.png') no-repeat center;
        border-bottom: thin solid #e9e2e2;
      }
      .gridRowContainer{
        border-bottom: thin solid #e8e6e6;
        &:hover{
          cursor: pointer;
          color: blue;
          background-color: #f7f7ff;
          svg{fill: blue;}
        }
        .gridRow{
          @include gridRowCommon;
          svg{height: 16px;}
        }
      } // gridRowContainer
    } // gridBody
  } // resultsContainer


} //appContainer
