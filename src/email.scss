
//todo; refactor multiple greys into 2 vars

#appContainer{

  @media only screen and (max-width: 660px){
    #resultsContainer{
      #gridHeader{
        span:not(:first-child){
          &:before{content: '|';}
          a{padding-left: 7px;}
        }
      }
      #gridBody .gridRowContainer .gridRow{
        $rowpadding: 11px;
        flex-direction: column;
        align-items: flex-start;
        height: 86px;
        position: relative;
        padding:$rowpadding 0 $rowpadding 10px;
        .icon-mail-sp{
          position: absolute;
          height: 29px;
          left: 11px;
          top: 19px;
          fill: #777;
        }
        span{
          &.from, &.to{padding-left: 18px;}
          &.from{font-weight: bold;}
          &:not(.date){width: 100%;}
          &.subject svg{display: none;}
          &.to[data-count]:not([data-count='1']){
            padding-right: 9%;
            &:after{right: 0;}
          }
          &.date{
            position: absolute;
            top: $rowpadding;
            right: 0;
            overflow: visible;
            width: auto;
            svg{
              transform-origin: 0 0;
              &.icon-arrow-thin{transform: translateY(47%) translateX(5px) scale(0.5);}
              &.icon-paperclip{
                position: absolute;
                left: -25px;
                top: 3px;
                fill: #797979;
              }
            }
          }
        }
      } //gridrow
    } // resultsContainer
  } //mq mobile
  @media only screen and (min-width: 661px){
    @mixin gridRowCommonMQ{
      span{
        &.from{width: 20%;}
        &.to{width: 25%;}
        &.subject{width: 55%;}
        &.date{width: 10%;}
      }
    }
    #resultsContainer{
      #gridHeader{
        @include gridRowCommonMQ;
      }
      #gridBody .gridRowContainer .gridRow{
        @include gridRowCommonMQ;
        height: 57px;
        align-items: center;
        .icon-mail-sp{display: none;}
        span{
          &.to{
            padding-right: 5%;
            &[data-count]:not([data-count='1']):after{right: 5%;}
          }
          &.date{
            width: 10%;
            svg{display: none;}
          }
        }
      } //gridrow
    } //resultscont
  } // mq desktop

  padding: 34px 21px;

  #searchContainer{
    width: 300px;
    height: 43px;
    border: 2px solid #d0d0d0;
    border-radius: 6px;
    box-shadow: 0 0 4px 1px rgba(208, 208, 208, 0.4) inset;
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    // datepickers. Easiest way to add content is by where they are inserted by Materialize...
      div.modal:before{padding: 8px 22px;display: block;}
      .displayDate + div.modal:before{content:'Pick search start date';}
      input + div.modal:before{content:'Pick search end date';}
    // ********************************************************
    .icon-calendar{
      height: 23px;
      svg{padding: 3px 10px;}
    }
    .icon-search{
      position: absolute;
      border-left: 2px solid #d0d0d0;
      right: 0;
      top: 0;
      background-color: #f5f5f5;
      height: 100%;
      width: 18%;
      padding: 9px 0;
      text-align: center;
      transition: all 350ms;
      &:hover{
        background-color: #eaeaea;
      }
      svg{padding: 0 10px;}
    }
    svg{
      fill: #555;
      height: 100%;
      cursor: pointer;
    }
  } //searchContainer

  @mixin gridRowCommon{
    display: flex;
    padding-left: 10px;
    span{
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
      padding-right: 1%;
      position: relative;
      &.to{
        &[data-count]:not([data-count='1']){
          &:after{content: "+" attr(data-count);
            background: #888;
            padding: 0 6px;
            display: block;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            border-radius: 4px;
            color: #fff;
            font-size: 0.85em;
            font-weight: bold;
          }
        }
      }
      &.subject{
        &[data-attachments='true']{padding-right: 4%;}
        .icon-paperclip{
          position: absolute;
          top: 50%;
          right: 3%;
          transform: translateY(-50%);
        }
      }
    }
  }

  #resultsContainer{
    margin-top: 15px;
    div#resultCounter{
      border-bottom: 1px solid #e8e6e6;
      font-weight: bold;
      font-size: 1.3em;
      color: #666;
      span{font-size: 1.3em;}
    }
    #gridHeader{
      background: #f5f5f5;
      border-bottom: 1px solid #e8e6e6;
      align-items: center;
      height: 57px;
      &[data-sort-asc='false'] span svg{transform: rotate(180deg);}
      span{
        color: #000;
        font-weight: bold;
        &[data-sort-on='false']{
          color: #8f8f8f;
          svg{display: none;}
        }
        a{
          color: inherit;
          &:hover{text-decoration: underline;cursor:pointer;}
        }
        svg{
          height: 7px;
          display: inline-block;
          margin-left: 3px;
        }
      }
      @include gridRowCommon;
    }
    #gridBody{
      &.empty{
        height: 50vh;
        background: url('logo.png') no-repeat center;
        border-bottom: thin solid #e9e2e2;
      }
      .gridRowContainer{
        border-bottom: thin solid #e8e6e6;
        .gridRow{
          @include gridRowCommon;
          svg{height: 16px;}
          &:hover{
            cursor: pointer;
            color: blue;
            background-color: #f7f7ff;
            svg{fill: blue;}
          }
        }
        .body{
          // .hide handled by Materialize
          padding: 9px 3%;
          background: #f5f5f5;
          a.btn-small{
            display: block;
            width: 77px;
            margin-top: 5px;
          }
        }
      } // gridRowContainer
    } // gridBody
  } // resultsContainer


} //appContainer
